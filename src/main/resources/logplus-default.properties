#logplus fields will be duplicated into MDC if the logging system needs to get the value from MDC, Usually happens when application using traditional logger or formatter.  
logplus.system.usemdc=false
# logplus.system.inheritable.fields defines whether pass application context into child thread automatically in use of threadpool, if using threadpool set false, otherwise true. if true see sample code on how to pass context manually 
logplus.system.inheritable.fields=false
#LogPlus filter mapping
#excludes list will be applied first 
#LogPlus filter urlmapping including list default value is /*
#logplus.filter.urlmapping.includes=/*Servlet
#LogPlus filter urlmapping excluding list default value is 'empty'
#logplus.filter.urlmapping.excludes=/*Servlet
logplus.header.name=AQALogPlus
#the keys included must match related fields in logback.xml as well
#The fields which LogPlus preparing the value on run time
#logplus.fields=uuid,sessionId,userName,stm-logplusId,stm-stepName,remoteIp,hostName
logplus.fields=appName,serviceName,uuid,sessionId,userName,remoteIp,hostName,processId,APP_ERR_CODE,APP_ERR_MSG
#the key values carried by the logplus header  
#logplus.header.includes=uuid,sessionId,userName,stm-logplusId,stm-stepName
logplus.header.includes=uuid,sessionId,userName
#
# logplus custom json layout pattern definition
# 1, reserved keywords: TIMESTAMP, THREAD, LOGGER, LEVEL, MESSAGE, EXCEPTION, METHOD
# 2, fields default define basic fields which originally exist in logging framework, customized fields are extended fields which need to match with logplus fields.
# 3, the format will be "field name [name=print out name] [format=special time format which originally supported by logging framework or X](additional X: X100 means string will shrink to max chars of 100), [mandatory=true/display no matter what or false/do not display if there's no value on that field]
# 4, by default, all basic (reserved keywords) fields will print out, custom fields are not mandatory
# 5, if there's no specified name, then field name will be printed out
#put the APP_ERR_CODE and APP_ERR_MSG behind the message and exception fields is recommended
logplus.json.fields.default=TIMESTAMP[name=timestamp][format=yyyy-MM-dd HH:mm:ss.SSS zzz][position=first],THREAD[name=thread],LOGGER[name=logger][position=2],LEVEL[name=logLevel][position=1],MESSAGE[name=message][position=last],EXCEPTION[name=exception][position=last],METHOD[name=logMethod][position=4],checkpointForDisplay[name=performanceCheckPoint],elapsedTime,startTime,APP_ERR_CODE[name=appErrCode],APP_ERR_MSG[name=appErrMsg]
#Section of key value
# sensitive information need to hide
#cfg.aqa.header.mask=userName
logplus.value.hash=userName
#Where to find the header value in web entry
#REQUEST_HEADER is a reserved key word, means in the http request
#If request header includes multiple key:value, can be defined as: REQUEST_HEADER.currId[partOne],REQUEST_HEADER.currId[partTwo] ...   
uuid.value=REQUEST_HEADER.uuid,UUID
#Full host name
hostName.value=HOST_NAME.full
#Host name
#hostName.value=HOST_NAME
#Field value scope: 
# 1. CONTEXT : The field value is constant of the JVM parameter.
# 2. THREAD : The value same in the Thread level
# 3. LINE : The value only valid in one line of the log 
hostName.scope=CONTEXT
# process ID
processId.value=PROCESSID
#
APP_ERR_CODE.value=APP_ERR_CODE
APP_ERR_CODE.scope=LINE
#Array of packages which this field will be eligible for
APP_ERR_CODE.for.packages=com.dit.tutorials
#Array of logLevels which this field will be eligible for 
APP_ERR_CODE.for.logLevel=WARN,ERROR
#Text Search Rules
#Search mode:BETWEEN, SUBSTRING
APP_ERR_CODE.com.dit.tutorials.search=BETWEEN
APP_ERR_CODE.com.dit.tutorials.start.tag=Error Code:
APP_ERR_CODE.com.dit.tutorials.end.tag=,
#**LINE_BEGIN**, **LINE_END** is the special tag means from the beginning and to end of the line 
#
APP_ERR_MSG.value=APP_ERR_CODE
APP_ERR_MSG.scope=LINE
APP_ERR_MSG.for.packages=com.dit.tutorials
APP_ERR_MSG.for.logLevel=WARN,ERROR
#
APP_ERR_MSG.com.dit.tutorials.search=BETWEEN
APP_ERR_MSG.com.dit.tutorials.start.tag=Error Message:
APP_ERR_MSG.com.dit.tutorials.end.tag=**LINE_END**
#
#Example for SUBSTRING
#APP_ERR_CODE.com.dit.tutorials.text.search=SUBSTRING
#APP_ERR_CODE.com.dit.tutorials.text.start.tag=10
#APP_ERR_CODE.com.dit.tutorials.text.end.tag=20
#
#SESSION_ID is a reserved key word, means the http sessionID
sessionId.value=SESSION_ID
#SESSION is a reserved key word, means in the http session
userName.value=SESSION.userSession.customerId
# stm use only
#stm-stepName.key=stm-stepName
#stm-logplusId.value=REQUEST_HEADER.stm-logplusId
#
#stm-stepName.value=REQUEST_HEADER.stm-stepName
#
# REMOTEADDR is a reserved key word, meaning  IP from http request
remoteIp.value=REMOTEADDR
#
appName.value=PROPERTY_VALUE.applicationName
appName.scope=CONTEXT
#
# ============================================================================
#System Properties
serviceName=SafebankingUIService
applicationName=SafebankingUI
#
#=============================================================================
#Components Implementation
component.CheckPointService=com.dawninfotek.logplus.checkpoint.CheckPointServiceBaseImpl
component.EventService=com.dawninfotek.logplus.event.EventServiceBaseImpl
component.HashService=com.dawninfotek.logplus.security.HashServiceBaseImpl
component.MaskService=com.dawninfotek.logplus.security.MaskServiceBaseImpl
#============================================================================
#Resolver
resolver.HOST_NAME=com.dawninfotek.logplus.resolver.impl.HostNameResolver
resolver.REQUEST_HEADER=com.dawninfotek.logplus.resolver.impl.RequestHeaderResolver
resolver.REMOTEADDR=com.dawninfotek.logplus.resolver.impl.RemoteAddrResolver
resolver.UUID=com.dawninfotek.logplus.resolver.impl.UUIDResolver
resolver.SESSION_ID=com.dawninfotek.logplus.resolver.impl.SessionIdResolver
resolver.SESSION=com.dawninfotek.logplus.resolver.impl.SessionValueResolver
resolver.APP_ERR_CODE=com.dawninfotek.logplus.resolver.impl.TextSearchResultResolver
resolver.APP_ERR_MSG=com.dawninfotek.logplus.resolver.impl.TextSearchResultResolver
resolver.ALIAS=com.dawninfotek.logplus.resolver.impl.ALIASResolver
resolver.PROPERTY_VALUE=com.dawninfotek.logplus.resolver.impl.PropertyValueResolver
resolver.PROCESSID=com.dawninfotek.logplus.resolver.impl.ProcessIDResolver
#=============================================================================
#Message Section Begin
message.event.begin=%s event %s begin
message.event.end=%s event %s end
message.performance.metric=Performance_Metric:%s, execution time:%s, transactionPath:%s 
#Message Section Begin
#=============================================================================
#Event Names
eventType.application.state.change=Application State Change
eventType.abnormal.condition=Abnormal Condition
eventType.transaction=Transaction
eventType.business=Business
eventType.service=Service
#=============================================================================
#Will use pattern matching if true, otherwise use start-with matching
path.pattern.match=false
# if true, set '*' or '**' to txpath
# txpath.UserLogin=POST::/banking/User/*
# txpath.Profile=GET::/profile/**
#Section of transaction Path Mapping, the path is 'ServletPath'
txpath.UserLogin=POST::/banking/signonForm.do
txpath.MyProfile=GET::/banking/myProfile.do
#For WebService, header value could be added as parameter, for example:
#txpath.MyProfileSrv=POST::PATH=/bankingSrv/CustomerService::REQUEST_HEADER.soapaction=http://dawninfotek.com/SoapServices/UserProfile
#
#For some applications using for data as to determine the transaction, form data name and value can be defined as:
#txpath.Transter=POST::PATH=/banking/signonForm.do::REQUST_PARAMETER.actionType=InternalAccountTransfer
#  
#=============================================================================

