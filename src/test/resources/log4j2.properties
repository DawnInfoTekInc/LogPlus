name=PropertiesConfig
property.filename = C:\\log\\app\\log4j.log
property.contextName = APP
appenders = console, rolling
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = {"timestamp": "%d{yyyy-MM-dd HH:mm:ss.SSS zzz}{Canada/Eastern}", "hostname": "${hostName}", "clientIp": "%X{remoteIp}", "appName": "${contextName}", "logLevel ": "%-5p", "processId": "%X{processId}", "serviceName": "%X{transactionPath}", "corrId": "%X{uuid}", "sessionId": "%X{sessionId}", "clientId": "%X{userName}", "logMethod": "%M", "thread": "%thread", "logger": "%logger{36}:%L", "message": "%replace{%msg}{[\n]+|[\r]+|[\r\n]+}{}", "exception": "%replace{%ex}{[\n]+|[\r]+|[\r\n]+}{|}"}%n

appender.rolling.type = RollingFile
appender.rolling.name = roll
appender.rolling.fileName = ${filename}
appender.rolling.filePattern = C:\\log\\app\\EnhancedOLBRedesign.%d{yyyy-MM-dd-HH}.%i.log
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern={"timestamp": "%d{yyyy-MM-dd HH:mm:ss.SSS zzz}{Canada/Eastern}", "hostname": "${hostName}", "clientIp": "%X{remoteIp}", "appName": "${contextName}", "logLevel ": "%-5p", "processId": "%X{processId}", "serviceName": "%X{transactionPath}", "corrId": "%X{uuid}", "sessionId": "%X{sessionId}", "clientId": "%X{userName}", "logMethod": "%M", "thread": "%thread", "logger": "%logger{36}:%L", "message": "%replace{%msg}{[\n]+|[\r]+|[\r\n]+}{}", "exception": "%replace{%ex}{[\n]+|[\r]+|[\r\n]+}{|}"}%n
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 2
appender.rolling.policies.time.modulate = true
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=10MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 5

rootLogger.level = debug
rootLogger.appenderRefs = rolling, stdout
rootLogger.appenderRef.rolling.ref = roll
rootLogger.appenderRef.stdout.ref = STDOUT
